1.文件夹目录说明
    data_viewer:qt工程目录,该文件夹下有debug_output和release_output，里面各有一个config文件夹，包含了数据包格式文件
                release_output目录下还有一个release_template,里面有发布时需要的dll文件
                一般用debug调程序，然后生成release，最后加上相关的dll文件，就可以在不同的电脑上运行了
    package_interface:两个文件，主要实现读取数据包格式文件，解包，刷新数据包中的变量等
    plot_interface:两个文件，主要实现画图控件（qcustomplot）的管理及刷新
    QCustomPlot:qt环境下开源的画图控件，简单易用

2.主要功能说明
    （1）这个上位机主要为了方便日常调试时数据的显示及修改，显示有表和图两种形式
    （2）界面打开后，先点击一下readfile读取一下数据包格式，现在默认读取config文件夹下的config文件（当然可以自己添加一个file diaglog）
    （3）数据的管理以数据包的形式，每个数据包的结构通过读取config文件获取
         所以，数据包结构发生变化时，只需要修改config文件（当然，MCU发送上来的数据必须要和config文件一致）
         可以定义多个数据包，以ID做区分
    （4）在表中的数据都可以绘图，点击newplot，就可以新建一个绘图，点击newgraph就可以把当前的变量添加到同一个绘图中
         但是要注意变量的选中，这个在信息框中会有提示
    （5）变量的修改：修改表中的数据，然后再点击senddata就可以，当然这需要MCU编写相应的代码，修改完之后，可以read一下看是否修改成功
    


3.一些细节
    （1）MCU在写结构体的时候，需要添加数据头/数据包ID/数据尾（和校验），并且要求结构体紧密排列，在ARM上是通过添加__packed关键字实现的
         我在config文件夹下写了一个c_struct_template文件，可以参考一下
    （2）一般MCU会以一定频率发送一些推送包，上位机将这些包中的数据显示出来
         此外，应该还有一些参数包，这些包由上位机发给MCU，MCU不会推送这些包，但会响应上位机的查询命令
         也就是说，变量的显示通过推送包实现，变量的修改通过参数包实现
    （3）绘图用的是20Hz，用了一个定时器，这样做主要是考虑数据同步的问题（因为如果收到一个包就刷新一下绘图，遇到频率不同的推送包时，图一个快一个慢，会很乱）
         当然这个也可以修改，根据需求即可
    （4）config文件的变量前边加了一个xx_（xx表示数字），这样处理是因为qt的QSettings类在读取文件是会自动排序，这会直接导致数据包接解析错误
         所以加了数字用于确定顺序，当然，如果有时间，完全可以自己定义config文件格式，再编写相应的解析代码，我只是图方便，用了现成
    （5）目前使用串口接的数据，当然其他的数据源都可以，只要把数据包解出来就行
    （6）目前已使用了两周，挂掉过一两次，如果复现率比较高，邮件给我，大家一起改进~~











































































谨以此文档纪念我写文档的时候烧焦的两个鸡蛋，我的早餐啊~~~


